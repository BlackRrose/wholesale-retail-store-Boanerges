// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WholesaleRetailAPI.Models;

#nullable disable

namespace WholesaleRetailAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WholesaleRetailAPI.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CustomerType = "Retail",
                            Email = "retail1@test.com",
                            Name = "Retail Customer 1"
                        },
                        new
                        {
                            CustomerId = 2,
                            CustomerType = "Retail",
                            Email = "retail2@test.com",
                            Name = "Retail Customer 2"
                        },
                        new
                        {
                            CustomerId = 3,
                            CustomerType = "Wholesale",
                            Email = "wholesale1@test.com",
                            Name = "Wholesale Customer 1"
                        },
                        new
                        {
                            CustomerId = 4,
                            CustomerType = "Wholesale",
                            Email = "wholesale2@test.com",
                            Name = "Wholesale Customer 2"
                        });
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.PricingRule", b =>
                {
                    b.Property<int>("PricingRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PricingRuleId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinQuantity")
                        .HasColumnType("int");

                    b.HasKey("PricingRuleId");

                    b.ToTable("PricingRules");

                    b.HasData(
                        new
                        {
                            PricingRuleId = 1,
                            Active = true,
                            CustomerType = "Wholesale",
                            DiscountPercentage = 5m,
                            MinQuantity = 10
                        },
                        new
                        {
                            PricingRuleId = 2,
                            Active = true,
                            CustomerType = "Wholesale",
                            DiscountPercentage = 10m,
                            MinQuantity = 50
                        },
                        new
                        {
                            PricingRuleId = 3,
                            Active = true,
                            CustomerType = "Retail",
                            DiscountPercentage = 2m,
                            MinQuantity = 5
                        });
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Category = "Fruit",
                            Description = "Fresh Apple",
                            Name = "Apple",
                            Price = 15.5m,
                            StockQuantity = 100
                        },
                        new
                        {
                            ProductId = 2,
                            Category = "Fruit",
                            Description = "Fresh Banana",
                            Name = "Banana",
                            Price = 12.0m,
                            StockQuantity = 120
                        },
                        new
                        {
                            ProductId = 3,
                            Category = "Dairy",
                            Description = "1L Milk",
                            Name = "Milk",
                            Price = 20.0m,
                            StockQuantity = 80
                        },
                        new
                        {
                            ProductId = 4,
                            Category = "Bakery",
                            Description = "Whole Grain Bread",
                            Name = "Bread",
                            Price = 10.5m,
                            StockQuantity = 50
                        },
                        new
                        {
                            ProductId = 5,
                            Category = "Dairy",
                            Description = "Dozen Eggs",
                            Name = "Eggs",
                            Price = 25.0m,
                            StockQuantity = 70
                        });
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.Order", b =>
                {
                    b.HasOne("WholesaleRetailAPI.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.OrderItem", b =>
                {
                    b.HasOne("WholesaleRetailAPI.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WholesaleRetailAPI.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WholesaleRetailAPI.Models.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
